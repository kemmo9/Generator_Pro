import os
import base64

# This script creates a self-contained Python file with all necessary assets.
OUTPUT_FILE = "_assets.py"
STATIC_DIR = "static"

ASSET_PATHS = [
    "Inter-Regular.ttf",
    "Inter-SemiBold.ttf",
    "peter.png",
    "brian.png",
    "reddit_template_final.png" # The new, correct template
]

def encode_file_to_base64(path):
    """Reads a file and returns its Base64 encoded string."""
    with open(path, "rb") as f:
        return base64.b64encode(f.read()).decode('utf-8')

def main():
    print(f"--- Generating {OUTPUT_FILE} ---")
    
    output_content = [
        "# This file is auto-generated by embed_assets.py. DO NOT EDIT MANUALLY.",
        "ASSET_DATA = {"
    ]
    
    for asset in ASSET_PATHS:
        try:
            full_path = os.path.join(STATIC_DIR, asset)
            encoded_string = encode_file_to_base64(full_path)
            print(f"Embedding {asset}...")
            output_content.append(f"    '{asset}': '{encoded_string}',")
        except FileNotFoundError:
            print(f"FATAL ERROR: Asset file not found at '{full_path}'. Please ensure it exists.")
            return

    output_content.append("}")
    
    with open(OUTPUT_FILE, "w") as f:
        f.write("\n".join(output_content))
        
    print(f"\nSUCCESS: Created '{OUTPUT_FILE}'.")
    print("You MUST now commit this new file to your Git repository before deploying.")

if __name__ == "__main__":
    main()
