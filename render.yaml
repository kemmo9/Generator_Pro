# A robust, scalable blueprint for the AI Video Generator

services:
  # The Web Service: Handles user requests and serves the frontend.
  - type: web
    name: ai-video-web
    env: python
    # Health check to ensure the web service is responsive
    healthCheckPath: /health
    # Auto-deploys when you push to the main branch
    autoDeploy: true

  # The Background Worker: Does the heavy lifting of video creation.
  - type: worker
    name: ai-video-worker
    env: python
    # The command to start the worker process (defined in worker.py)
    startCommand: python -m worker
    # Auto-deploys alongside the web service
    autoDeploy: true

  # The Redis Queue: Connects the web service and the worker.
  - type: redis
    name: ai-video-queue
    plan: free # The free Redis plan is perfect for this
    maxmemoryPolicy: allkeys-lru # Recommended policy for free tier

# Common settings for both the web service and the worker
envVars:
  # The Python version to use
  - key: PYTHON_VERSION
    value: 3.11
  # The command to install all dependencies
  - key: BUILD_COMMAND
    value: "pip install -r requirements.txt"
  # Secrets that you will set in the Render dashboard
  - key: ELEVENLABS_API_KEY
    sync: false
  - key: CLOUDINARY_CLOUD_NAME
    sync: false
  - key: CLOUDINARY_API_KEY
    sync: false
  - key: CLOUDINARY_API_SECRET
    sync: false
  # This tells our Python services how to find the Redis queue
  - key: REDIS_URL
    fromService:
      type: redis
      name: ai-video-queue
      property: connectionString